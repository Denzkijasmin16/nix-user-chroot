name: CI
on:
  push:
    branches: [staging, trying]
  pull_request:
    branches: [master]
    types: [opened, reopened, synchronize]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - i686-unknown-linux-musl
          - armv7-unknown-linux-musleabihf
          - aarch64-unknown-linux-musl
        rust: [1.49.0]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      - name: Ready cache
        if: matrix.os == 'ubuntu-latest'
        run: sudo chown -R $(whoami):$(id -ng) ~/.cargo/
      - name: install aarch64-compiler cross-compiler
        if: matrix.target == 'aarch64-unknown-linux-musl'
        run: |
          sudo apt install gcc-aarch64-linux-gnu
          mkdir .cargo
          cat >.cargo/config <<EOF
          [target.aarch64-unknown-linux-musl]
          linker = "aarch64-linux-gnu-gcc"
          EOF
      - name: install armv7-compiler cross-compiler
        if: matrix.target == 'armv7-unknown-linux-musleabihf'
        run: |
          sudo apt install gcc-arm-linux-gnueabihf
          mkdir .cargo
          cat >.cargo/config <<EOF
          [target.armv7-unknown-linux-musleabihf]
          linker = "arm-linux-gnueabihf-gcc"
          EOF
      - name: Cache cargo
        uses: actions/cache@v2.1.3
        id: cache
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Test
        uses: actions-rs/cargo@v1
        if: matrix.target != 'armv7-unknown-linux-musleabihf' && matrix.target != 'aarch64-unknown-linux-musl'
        with:
          command: test
          args: --target ${{ matrix.target }}
      - name: Build
        uses: actions-rs/cargo@v1
        if: matrix.target == 'armv7-unknown-linux-musleabihf' || matrix.target == 'aarch64-unknown-linux-musl'
        with:
          command: build
          args: --target ${{ matrix.target }}
      - name: Install cargo-cache
        uses: actions-rs/install@v0.1
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          crate: cargo-cache
          use-tool-cache: true
      - name: Cleanup cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: cargo cache -a
  lint:
    name: Linting (fmt + clippy)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [1.46.0]
    steps:
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Checkout
        uses: actions/checkout@v2
      - name: Ready cache
        run: sudo chown -R $(whoami):$(id -ng) ~/.cargo/
      - name: Cache cargo
        uses: actions/cache@v2.1.3
        id: cache
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
      - name: Format check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
      - name: Install cargo-cache
        uses: actions-rs/install@v0.1
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          crate: cargo-cache
          use-tool-cache: true
      - name: Cleanup cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: cargo cache -a
